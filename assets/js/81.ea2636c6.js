(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{481:function(t,s,e){"use strict";e.r(s);var a=e(2),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[s("RouterLink",{attrs:{to:"/middleware/redis.html"}},[t._v("接上文：Redis 入门")])],1)]),t._v(" "),s("img",{attrs:{width:"380",height:"253",align:"bottom",src:"https://cdn.nlark.com/yuque/0/2023/png/375413/1677049520574-ed36d995-3b54-414d-b870-f5b67e46c502.png"}}),t._v(" "),s("h2",{attrs:{id:"_4-主从复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-主从复制"}},[t._v("#")]),t._v(" 4 主从复制")]),t._v(" "),s("p",[t._v("作用：备份、读写分离")]),t._v(" "),s("h3",{attrs:{id:"_4-1-实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-实现方式"}},[t._v("#")]),t._v(" 4.1 实现方式")]),t._v(" "),s("p",[t._v("假如现在有两个redis，一个6379；一个6380；让6379成为master节点；6380成为slave节点")]),t._v(" "),s("ol",[s("li",[t._v("命令方式：\n"),s("ol",[s("li",[t._v("redis-6380：slaveof 127.0.0.1 6379；主从关系建立后，slave先删除所有数据再从master同步")]),t._v(" "),s("li",[t._v("去掉redis-6380：slaveof no one 127.0.0.1 6379")])])]),t._v(" "),s("li",[t._v("配置方式：\n"),s("ol",[s("li",[t._v("配置文件：\n"),s("ol",[s("li",[t._v("slaveof ip port")]),t._v(" "),s("li",[t._v("slave-read-only：是否现在slave只读")])])])])])]),t._v(" "),s("h3",{attrs:{id:"_4-2-全量-部分复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-全量-部分复制"}},[t._v("#")]),t._v(" 4.2 全量/部分复制")]),t._v(" "),s("h4",{attrs:{id:"_4-2-1-runid和偏移量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-runid和偏移量"}},[t._v("#")]),t._v(" 4.2.1 runid和偏移量")]),t._v(" "),s("p",[s("strong",[t._v("runid：")])]),t._v(" "),s("ol",[s("li",[t._v("redis每次启动的时候都会有一个随机的id来保障redis的标识，每次重启之后都是不一样的")]),t._v(" "),s("li",[t._v("查看runid：")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("redis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6979")]),t._v(" info server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" grep run\nrun_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("dsfsdf34234wfdsdf23432fdsdf\n")])])]),s("p",[s("strong",[t._v("偏移量：")])]),t._v(" "),s("ul",[s("li",[t._v("一个数据写入量的字节，记录写了多少数据。主服务器会把偏移量同步给从服务器，当主从的偏移量一致，则数据是完全同步的")]),t._v(" "),s("li",[t._v("如果主从服务的偏移量大于从服务器，则主从不同步")]),t._v(" "),s("li",[t._v("查看offset：")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("redis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6979")]),t._v(" info replication   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查看命令")]),t._v("\nslave_repl_offset："),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1978")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 偏移量参数")]),t._v("\n")])])]),s("p",[s("em",[s("strong",[t._v("redis选择选择全量复制还是部分复制")]),t._v("：从节点将 runId，offset 发送给主节点后，主节点根据runId，偏移量和复制缓冲区（repl_back_buffer）大小来决定是否执行部分复制")])]),t._v(" "),s("ul",[s("li",[s("em",[t._v("如果runId和master的相同，并且offset 偏移量之后的数据，仍然在复制积压缓冲区的话，使用部分复制")])]),t._v(" "),s("li",[s("em",[t._v("如果runId和master的不同，或者offset 偏移量之后的数据，已经不在积压缓冲区的话，说明数据已经被挤出，所以进行全量复制")])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("复制缓冲区（积压队列，repl_back_buffer）")]),t._v("：是一个固定长度的循环队列，默认情况下积压队列的大小为 1 MB；每次写操作会往这个缓冲区写，循环写")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-2-全量复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-全量复制"}},[t._v("#")]),t._v(" 4.2.2 全量复制")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1610984975731-f211592b-a5b8-49e8-aa9a-21533858870f.png#height=283&id=CKiGC&name=19.png&originHeight=390&originWidth=680&originalType=binary&ratio=1&size=103074&status=done&style=none&width=494",alt:"19.png"}})]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ul",[s("li",[t._v("slave 向 master 传递命令 psync? -1 （因为第一次通信不知道master的runid和偏移量，所以传-1）")]),t._v(" "),s("li",[t._v("master 向 slave 返回runid 和偏移量（为什么要返回runid给slave呢，因为可能master重启了，但是slave没有重启，slave还是老的runid）")]),t._v(" "),s("li",[t._v("slave 保存 master 的信息")]),t._v(" "),s("li",[t._v("master 执行 bgsave 生产RDB快照")]),t._v(" "),s("li",[t._v("master 做send RDB 操作 向 slave 同步快照信息")]),t._v(" "),s("li",[t._v("master 在生成RDB文件及传输过程中执行的命令写到repl_back_buffer，然后把repl_back_buffer也传送也slave")]),t._v(" "),s("li",[t._v("slave清空之前的数据")]),t._v(" "),s("li",[t._v("slave 加载 RDB文件及数据")]),t._v(" "),s("li",[t._v("slave执行repl_back_buffer中的命令")])]),t._v(" "),s("p",[t._v("开销：")]),t._v(" "),s("ul",[s("li",[t._v("bgsave时间")]),t._v(" "),s("li",[t._v("RDB文件网络传输时间")]),t._v(" "),s("li",[t._v("从节点清空数据时间")]),t._v(" "),s("li",[t._v("从节点加载RDB的时间")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-3-部分复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-部分复制"}},[t._v("#")]),t._v(" 4.2.3 部分复制")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1610985019735-6fea13b2-b89c-4ef8-bb52-0c4d76b5c08a.png#height=280&id=nCaf1&name=20.png&originHeight=365&originWidth=583&originalType=binary&ratio=1&size=82009&status=done&style=none&width=448",alt:"20.png"}})]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ul",[s("li",[t._v("当网络发生抖动，slave会与master断开")]),t._v(" "),s("li",[t._v("master 写命令时，会写一份复制缓冲区的命令")]),t._v(" "),s("li",[t._v("当slave在此连接master时 ，传递命令 psync {offset} {runid} ,告诉 master 自己当前的偏移量是多少")]),t._v(" "),s("li",[t._v("master 向 slave 返回CONTINUE 把 缺失的内容 传递过去")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-4-命令持续复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4-命令持续复制"}},[t._v("#")]),t._v(" 4.2.4 命令持续复制")]),t._v(" "),s("p",[t._v("当完成了上面的同步之后，主从服务器就会进入命令传播阶段，主节点会持续地把写命令发送给从节点")]),t._v(" "),s("h4",{attrs:{id:"_4-2-5-心跳检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-5-心跳检测"}},[t._v("#")]),t._v(" 4.2.5 心跳检测")]),t._v(" "),s("p",[t._v("当完成了上面的同步之后，主从之间维护着长连接并彼此发送心跳命令，便以后续持续发送写命令，主从心跳检测如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611027750094-7517088e-2f27-4925-9f18-7d9ee99f3a66.png#height=277&id=cnXwM&name=58737ABA-018F-4613-99D3-0A1E11B0AC65.png&originHeight=277&originWidth=638&originalType=binary&ratio=1&size=49962&status=done&style=none&width=638",alt:"58737ABA-018F-4613-99D3-0A1E11B0AC65.png"}})]),t._v(" "),s("p",[t._v("主从节点彼此都有心跳检测机制，各自模拟成对方的客户端进行通信，主从心跳检测的规则如下：")]),t._v(" "),s("ul",[s("li",[t._v("主节点默认每隔 10 秒对从节点发送 ping 命令，判断从节点的存活性和连接状态。可通过修改 redis.conf 配置文件里面的 repl-ping-replica-period 参数来控制发送频率")]),t._v(" "),s("li",[t._v("从节点在主线程中每隔 1 秒发送 replconf ack {offset} 命令，给主节点 上报自身当前的复制偏移量，这条命令除了检测主从节点网络之外，还通过发送复制偏移量来保证主从的数据一致")])]),t._v(" "),s("h3",{attrs:{id:"_4-3-故障处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-故障处理"}},[t._v("#")]),t._v(" 4.3 故障处理")]),t._v(" "),s("h4",{attrs:{id:"_4-3-1-slave节点故障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-slave节点故障"}},[t._v("#")]),t._v(" 4.3.1 slave节点故障")]),t._v(" "),s("p",[t._v("没太大影响")]),t._v(" "),s("h4",{attrs:{id:"_4-3-2-master节点故障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-master节点故障"}},[t._v("#")]),t._v(" 4.3.2 master节点故障")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1610985089674-0d888f7b-f7f6-4ede-b658-07f28ec0dfd6.png#height=183&id=iJkPc&name=21.png&originHeight=312&originWidth=817&originalType=binary&ratio=1&size=149028&status=done&style=none&width=480",alt:"21.png"}})]),t._v(" "),s("p",[t._v("手动对某个slave执行，slaveof no one")]),t._v(" "),s("h3",{attrs:{id:"_4-4-常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-常见问题"}},[t._v("#")]),t._v(" 4.4 常见问题")]),t._v(" "),s("h4",{attrs:{id:"_4-4-1-读写分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-读写分离"}},[t._v("#")]),t._v(" 4.4.1 读写分离")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1610985131861-5af4ce4a-764e-41ce-ad62-5f96a313dbca.png#height=261&id=zP9ll&name=22.png&originHeight=261&originWidth=406&originalType=binary&ratio=1&size=59558&status=done&style=none&width=406",alt:"22.png"}})]),t._v(" "),s("p",[t._v("问题：")]),t._v(" "),s("ul",[s("li",[t._v("复制数据延迟")]),t._v(" "),s("li",[t._v("读到之前的数据")])]),t._v(" "),s("h4",{attrs:{id:"_4-4-2-配置不一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-配置不一致"}},[t._v("#")]),t._v(" 4.4.2 配置不一致")]),t._v(" "),s("ul",[s("li",[t._v("主从maxmemory不一致，例如master设置成4G，slave设置成2G，那么slave加载4G的RDB文件内存不够，会触发slave的淘汰策略")]),t._v(" "),s("li",[t._v("对主节点做了一些数据结构优化参数（例如hash-max-ziplist-entries），导致从节点的内存不够")])]),t._v(" "),s("h4",{attrs:{id:"_4-4-3-避免全量复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3-避免全量复制"}},[t._v("#")]),t._v(" 4.4.3 避免全量复制")]),t._v(" "),s("ul",[s("li",[t._v("第一次全量复制无法避免，好的方法就是对redis进行分片，每个redis不要这么大")]),t._v(" "),s("li",[t._v("节点运行id不匹配（例如主节点重启）：这个时候从节点发现主节点runid变了，会触发全量复制\n"),s("ul",[s("li",[t._v("故障转移，将slave转化为master")])])]),t._v(" "),s("li",[t._v("rel_back_buffer不足：默认是1M，假如slave节点和master节点偏移量超过了1M，就会触发全量复制\n"),s("ul",[s("li",[t._v("可以通过参数：rel_backlog_size，设置大一些，例如10M")])])])]),t._v(" "),s("h4",{attrs:{id:"_4-4-5-避免复制风暴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-5-避免复制风暴"}},[t._v("#")]),t._v(" 4.4.5 避免复制风暴")]),t._v(" "),s("ul",[s("li",[t._v("例如主节点重启，runid变化了，所有slave都需要全量复制\n"),s("ul",[s("li",[t._v("将一个slave上升为master")]),t._v(" "),s("li",[t._v("更换复制拓扑")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1610985208417-461d9997-af98-410c-be63-e91549df0b82.png#height=163&id=wZrfX&name=23.png&originHeight=163&originWidth=302&originalType=binary&ratio=1&size=31847&status=done&style=none&width=302",alt:"23.png"}})]),t._v(" "),s("h2",{attrs:{id:"_5-redis-哨兵-sentinel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-redis-哨兵-sentinel"}},[t._v("#")]),t._v(" 5 Redis 哨兵 —— sentinel")]),t._v(" "),s("p",[t._v("主从复制，如果master节点挂掉了，需要手动进行以下操作：")]),t._v(" "),s("ul",[s("li",[t._v("对一个slave节点执行slaveof no one，让其成为master节点")]),t._v(" "),s("li",[t._v("然后对其他slave节点执行slave of newmaster")]),t._v(" "),s("li",[t._v("修改代码，把写节点配置成新的master；可以在diamond里配置")])]),t._v(" "),s("p",[t._v("更进一步是把这个过程写成一个脚本，redis有解决方案：sentinel")]),t._v(" "),s("h3",{attrs:{id:"_5-1-整体架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-整体架构"}},[t._v("#")]),t._v(" 5.1 整体架构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611135218010-e2df1f1d-6a2c-4da6-b824-ccf6b9d486a5.png#height=478&id=vq1I6&name=39.png&originHeight=956&originWidth=898&originalType=binary&ratio=1&size=92293&status=done&style=none&width=449",alt:"39.png"}}),t._v("\n客户端通过sentinel获取redis连接，sentinel知道谁是master谁是slave，客户端不需要知道谁是master；当master节点发生故障时，sentinel自动进行故障转移；")]),t._v(" "),s("p",[t._v("sentinel故障转移流程：")]),t._v(" "),s("ol",[s("li",[t._v("多个sentinel发现并确认master有问题")]),t._v(" "),s("li",[t._v("选举一个sentinel作为领导")]),t._v(" "),s("li",[t._v("选出一个slave作为master")]),t._v(" "),s("li",[t._v("通知其余slave成为新的master的slave")]),t._v(" "),s("li",[t._v("通知客户端主从变化")]),t._v(" "),s("li",[t._v("等待老的master复活成为新master的slave")])]),t._v(" "),s("p",[t._v("一套sentinel可以监控多套主从：\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611136139331-a4b4189d-0e04-4506-a7a8-ea6a88e7d061.png#height=397&id=g5P8K&name=41.png&originHeight=794&originWidth=1244&originalType=binary&ratio=1&size=105011&status=done&style=none&width=622",alt:"41.png"}})]),t._v(" "),s("h3",{attrs:{id:"_5-2-安装与配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-安装与配置"}},[t._v("#")]),t._v(" 5.2 安装与配置")]),t._v(" "),s("p",[t._v("实现如下目标，26379是sentinel默认端口：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611136600733-88417d5c-f838-40ad-84ce-4d2b356d3153.png#height=341&id=Vmknk&name=42.png&originHeight=341&originWidth=466&originalType=binary&ratio=1&size=28774&status=done&style=none&width=466",alt:"42.png"}})]),t._v(" "),s("h4",{attrs:{id:"_5-2-1-redis节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-redis节点"}},[t._v("#")]),t._v(" 5.2.1 redis节点")]),t._v(" "),s("p",[t._v("redis主节点：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("启动")]),t._v(" "),s("th",[t._v("redis-server redis-7000.conf")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("配置")]),t._v(" "),s("td",[t._v("port 7000 "),s("br"),t._v("daemonize yes "),s("br"),t._v("pidfile /.../redis-7000.pid "),s("br"),t._v(' logfile "7000.log" '),s("br"),t._v(" dir/....")])])])]),t._v(" "),s("ul",[s("li",[t._v("daemonize设置yes：代表开启守护进程模式。在该模式下，redis会在后台运行，除非手动kill该进程；")]),t._v(" "),s("li",[t._v("daemonize设置no：当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具都会导致redis进程退出")])]),t._v(" "),s("p",[t._v("redis从节点：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("启动")]),t._v(" "),s("th",[t._v("redis-server redis-7001.conf "),s("br"),t._v("redis-server redis-7002.conf")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("配置")]),t._v(" "),s("td",[t._v("port 7001/7002 "),s("br"),t._v("daemonize yes "),s("br"),t._v("pidfile /.../redis-7001/7002.pid "),s("br"),t._v('logfile "7001/7002.log" '),s("br"),t._v("dir /.... "),s("br"),t._v("slaveof 127.0.0.1 7000")])])])]),t._v(" "),s("h4",{attrs:{id:"_5-2-2-sentinel配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-sentinel配置"}},[t._v("#")]),t._v(" 5.2.2 sentinel配置")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("命令")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("port ${port}")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("dir /...")]),t._v(" "),s("td",[t._v("sentinel和redis是两个应用，所以可以使用两个工作目录")])]),t._v(" "),s("tr",[s("td",[t._v('logfile "${port}.log"')]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("sentinel monitor mymaster 127.0.0.1 7000 2")]),t._v(" "),s("td",[t._v("当前sentinel要监控的master "),s("br"),t._v(" mymaster：监控的master名称 "),s("br"),t._v(" 127.0.0.1 7000：监控的master地址及端口 "),s("br"),t._v(" 2：表示几个sentinel认为它有问题了才是真的有问题")])]),t._v(" "),s("tr",[s("td",[t._v("sentinel down-after-milliseconds mymaster 30000")]),t._v(" "),s("td",[t._v("master超过多长时间没响应就认为有故障，默认30s "),s("br"),s("em",[t._v("sentinel会向master发送心跳PING来确认master是否存活")])])]),t._v(" "),s("tr",[s("td",[t._v("sentinel parallel-syncs mymaster 1")]),t._v(" "),s("td",[t._v("故障转移的时候最多几个slave同时同步数据 "),s("br"),s("em",[t._v("新的master别切换之后，同时有多少个slave被切换到去连接新master，重新做同步，可以少设置点防止复制风暴")])])]),t._v(" "),s("tr",[s("td",[t._v("sentinel failover-timeout mymaster 180000")]),t._v(" "),s("td",[t._v("故障转移的超时时间")])])])]),t._v(" "),s("h4",{attrs:{id:"_5-2-3-jedis连接sentinel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-jedis连接sentinel"}},[t._v("#")]),t._v(" 5.2.3 jedis连接sentinel")]),t._v(" "),s("ul",[s("li",[t._v("client遍历sentinel节点集合")]),t._v(" "),s("li",[t._v("获取一个可用的sentinel节点，执行：sentinel get-master-addr-by-name masterName")]),t._v(" "),s("li",[t._v("sentinel返回master节点地址和端口")]),t._v(" "),s("li",[t._v("client向master节点执行 role或者role replication（role或role replication是redis命令，可以判断当前节点的角色），确定是不是master节点")]),t._v(" "),s("li",[t._v("client订阅一个频道（订阅的是sentinel里的频道），这个频道里发布有关master节点变更的消息")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" masterName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mymaster"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" sentinelSet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:26379"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:26380"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:26381"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),t._v(" sentinelPool \n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisSentinelPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("masterName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sentinelSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("poolConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),t._v(" jedis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tjedis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sentinelPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jedis命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jedis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tjedis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-3-故障转移原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-故障转移原理"}},[t._v("#")]),t._v(" 5.3 故障转移原理")]),t._v(" "),s("h4",{attrs:{id:"_5-3-1-三个定时任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-三个定时任务"}},[t._v("#")]),t._v(" 5.3.1 三个定时任务")]),t._v(" "),s("ol",[s("li",[t._v("每个sentinel每10秒对master和slave执行info\n"),s("ol",[s("li",[t._v("sentinel从master节点中获取从节点的消息")]),t._v(" "),s("li",[t._v("目的：确认主从关系")])])]),t._v(" "),s("li",[t._v("每个sentinel每2秒通过master节点的channel交换信息：第一个sentinel可以在第一个master节点的频道发布信息，其他sentinel节点会订阅这个频道，从而达到sentinel之间的交流\n"),s("ol",[s("li",[t._v("频道名称："),s("strong",[t._v("sentinel")]),t._v(":hello")]),t._v(" "),s("li",[t._v("交互对节点的“看法”和自身信息")]),t._v(" "),s("li",[t._v("新加入的sentinel节点也会去订阅这个频道，感知其他sentinel的存在")])])]),t._v(" "),s("li",[t._v("每个sentinel每1秒对其他sentinel和redis节点（master和slave节点）执行ping，用于故障检测")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611142990366-44846da8-2997-47ac-9df3-5fdf9a329e6a.png#height=297&id=NvYK6&name=43.png&originHeight=297&originWidth=423&originalType=binary&ratio=1&size=31467&status=done&style=none&width=423",alt:"43.png"}})]),t._v(" "),s("h4",{attrs:{id:"_5-3-2-主观下线和客观下线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-主观下线和客观下线"}},[t._v("#")]),t._v(" 5.3.2 主观下线和客观下线")]),t._v(" "),s("ul",[s("li",[t._v("主观下线：每个sentinel节点对redis节点失败的“偏见”，每秒对master节点ping，超过配置的时间没有响应，当前sentinel则认为下线了")]),t._v(" "),s("li",[t._v("客观下线：所有sentinel节点对redis节点失败“达成共识”（大于等于quorum）")])]),t._v(" "),s("h4",{attrs:{id:"_5-3-3-领导者选举-raft算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3-领导者选举-raft算法"}},[t._v("#")]),t._v(" 5.3.3 领导者选举（Raft算法）")]),t._v(" "),s("ul",[s("li",[t._v("原因：只要一个sentinel节点就能完成故障转移")]),t._v(" "),s("li",[t._v("选举：通过sentinel is-master-down-by-addr命令都希望成为领导者\n"),s("ul",[s("li",[t._v("每个做主观下线的sentinel节点向其他sentinel节点发送命令，要求将它设置为领导者")]),t._v(" "),s("li",[t._v("收到命令的sentinel节点如果没有同意过其他sentinel，那么将同意该请求，否则拒绝")]),t._v(" "),s("li",[t._v("如果该sentinel节点发现自己的票数已经超过sentinel半数且超过quorum（"),s("em",[t._v("这里的quorum和sentinel monitor配置的quorum有关系吗？")]),t._v("），那么它将成为领导者")]),t._v(" "),s("li",[t._v("如果此过程有多个sentinel节点成为了领导者，那么将等待一段时间重新进行选举")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611144479559-6cbb5fa6-43e2-4f64-8651-096c3867b49d.png#height=262&id=oMpkM&name=44.png&originHeight=262&originWidth=596&originalType=binary&ratio=1&size=31157&status=done&style=none&width=596",alt:"44.png"}})]),t._v(" "),s("h4",{attrs:{id:"_5-3-4-故障转移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-4-故障转移"}},[t._v("#")]),t._v(" 5.3.4 故障转移")]),t._v(" "),s("ol",[s("li",[t._v("从slave节点中选出一个“合适的”节点作为新的master节点\n"),s("ol",[s("li",[t._v("选择slave-priority最高的slave节点，如果存在则返回，不存在则继续，一般不设置，大家都是一样的，不过可以考虑把所在机器性能更好的slave设置高一点优先级，master节点的性能就更好。存在则返回，不存在则继续")]),t._v(" "),s("li",[t._v("选择复制偏移量更大的slave节点（复制的最完整），存在则返回，不存在则继续")]),t._v(" "),s("li",[t._v("选择runId最小的slave节点（启动最早的slave）")])])]),t._v(" "),s("li",[t._v("对上面的slave节点执行slave of no one命令让其成为master节点")]),t._v(" "),s("li",[t._v("向剩余的slave节点发送命令，让它们成为新master的slave节点，复制规则和parallel-syncs参数有关")]),t._v(" "),s("li",[t._v("对原来的master节点配置为slave，并保持对其“关注”，当其恢复后命令它去复制新的master节点")])]),t._v(" "),s("h2",{attrs:{id:"_6-redis-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis-cluster"}},[t._v("#")]),t._v(" 6 Redis Cluster")]),t._v(" "),s("h3",{attrs:{id:"_6-1-为什么需要集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-为什么需要集群"}},[t._v("#")]),t._v(" 6.1 为什么需要集群")]),t._v(" "),s("ul",[s("li",[t._v("并发量：主从只有一个master节点可以写，远远无法满足需要")]),t._v(" "),s("li",[t._v("数据量：如果数据量很大，只有一台master，那么复制就会很慢很慢")])]),t._v(" "),s("h3",{attrs:{id:"_6-2-理论基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-理论基础"}},[t._v("#")]),t._v(" 6.2 理论基础")]),t._v(" "),s("h4",{attrs:{id:"_6-2-1-顺序分区和哈希分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-顺序分区和哈希分区"}},[t._v("#")]),t._v(" 6.2.1 顺序分区和哈希分区")]),t._v(" "),s("p",[t._v("顺序分区：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611148312469-4bdaf336-e008-48fa-9938-32ccde2b5875.png#height=245&id=gjZwh&name=image.png&originHeight=490&originWidth=722&originalType=binary&ratio=1&size=223734&status=done&style=none&width=361",alt:"image.png"}})]),t._v(" "),s("p",[t._v("哈希分区：例如节点取模，hash(key)%3")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("分布方式")])]),t._v(" "),s("th",[s("strong",[t._v("特点")])]),t._v(" "),s("th",[s("strong",[t._v("典型产品")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("哈希分布")]),t._v(" "),s("td",[s("br"),t._v(" 数据分散度高 "),s("br"),t._v(" 分布与业务无关 "),s("br"),t._v(" 无法顺序访问")]),t._v(" "),s("td",[s("br"),t._v(" 一致性哈希Memcache "),s("br"),t._v(" Redis Cluster "),s("br"),t._v(" 其他缓存产品")])]),t._v(" "),s("tr",[s("td",[t._v("顺序分布")]),t._v(" "),s("td",[s("br"),t._v(" 数据分散易倾斜 "),s("br"),t._v(" 分布与业务相关 "),s("br"),t._v(" 可顺序访问")]),t._v(" "),s("td",[s("br"),t._v(" BigTable "),s("br"),t._v(" HBase")])])])]),t._v(" "),s("h4",{attrs:{id:"_6-2-2-哈希分布详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-哈希分布详解"}},[t._v("#")]),t._v(" 6.2.2 哈希分布详解")]),t._v(" "),s("h5",{attrs:{id:"_6-2-2-1-节点取余分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-1-节点取余分区"}},[t._v("#")]),t._v(" 6.2.2.1 节点取余分区")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611148887114-5c2c206d-cdd4-4dbc-adfa-68bcf8f9b2ff.png#height=214&id=mx3EA&name=image.png&originHeight=600&originWidth=1598&originalType=binary&ratio=1&size=588403&status=done&style=none&width=571",alt:"image.png"}})]),t._v(" "),s("p",[t._v("如果之前redis有3个点，现在扩容成4个点，哈希算法由hash(key)%3变成hash(key)%4，发现大约有80%的请求不在原来的节点上了，就会导致这80%的请求缓存失效，要重新从数据库里取；建议使用翻倍扩容的方法，如果变成6个节点，大约这有50%请求缓存失效，不过这种方法也不好")]),t._v(" "),s("h5",{attrs:{id:"_6-2-2-2-一致性哈希分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-2-一致性哈希分区"}},[t._v("#")]),t._v(" 6.2.2.2 一致性哈希分区")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611150700181-af3abfb9-75fb-4271-a0f8-f8508d59e39b.png#height=371&id=iIiop&name=48.png&originHeight=371&originWidth=777&originalType=binary&ratio=1&size=45044&status=done&style=none&width=777",alt:"48.png"}})]),t._v(" "),s("p",[t._v("规则：")]),t._v(" "),s("ol",[s("li",[t._v("确定node1~node2、node2~node4、node4～node3、node3~node1之间的数据范围")]),t._v(" "),s("li",[t._v("hash(key)%节点数，确定key应该落在哪个区间")]),t._v(" "),s("li",[t._v("顺时针取节点，例如key落到了node4~node3，则key的节点为node3")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611150612305-2f942d1b-ab36-4a78-9ecb-8a666512e23a.png#height=369&id=vSctw&name=47.png&originHeight=369&originWidth=455&originalType=binary&ratio=1&size=35693&status=done&style=none&width=455",alt:"47.png"}})]),t._v(" "),s("p",[t._v("可以看到新增node5，只会影响node1~node5之间的数据")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("保证最小迁移数据")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("em",[t._v("但是有数据倾斜（热点问题），虚拟节点解决数据倾斜问题")])])])])]),t._v(" "),s("h5",{attrs:{id:"_6-2-2-3-虚拟槽分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-3-虚拟槽分区"}},[t._v("#")]),t._v(" 6.2.2.3 虚拟槽分区")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611209882716-34e51b7a-d6c2-4f82-a162-76856f7fe95c.png#height=267&id=wQ75D&name=49.png&originHeight=267&originWidth=495&originalType=binary&ratio=1&size=25036&status=done&style=none&width=495",alt:"49.png"}})]),t._v(" "),s("p",[t._v("16383是redis cluster默认的槽数量")]),t._v(" "),s("h4",{attrs:{id:"_6-2-3-meet操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-meet操作"}},[t._v("#")]),t._v(" 6.2.3 meet操作")]),t._v(" "),s("p",[t._v("节点之间可以相互通信，遵守gossip协议，节点之间相互知道自己负责的槽范围\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611213578221-7ea363f3-c4fc-4e60-ab1e-a75f89999219.png#height=207&id=Wo69A&name=51.png&originHeight=207&originWidth=334&originalType=binary&ratio=1&size=18561&status=done&style=none&width=334",alt:"51.png"}})]),t._v(" "),s("p",[t._v("A联系到B，A联系到C；那么B和C就相当于通过A知道对方了")]),t._v(" "),s("h3",{attrs:{id:"_6-3-安装与配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-安装与配置"}},[t._v("#")]),t._v(" 6.3 安装与配置")]),t._v(" "),s("h4",{attrs:{id:"_6-3-1-原生安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-原生安装"}},[t._v("#")]),t._v(" 6.3.1 原生安装")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("安装流程")])]),t._v(" "),s("th",[s("strong",[t._v("配置")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1. 配置开启节点")]),t._v(" "),s("td",[s("br"),t._v(" port ${port} "),s("br"),t._v(" daemonize yes "),s("br"),t._v(" dir ... "),s("br"),t._v(' dbfilename "dump-${port}.db" '),s("br"),t._v(" logfile ... "),s("br"),t._v(" cluster-enabled yes（标志是否是cluster节点） "),s("br"),t._v(" cluster-config-file nodes-${port}.conf（cluster节点配置文件） "),s("br"),t._v(" cluster-require-full-coverage no（是否只要集群内一个节点不可用，整个集群都不再向外提供服务了，默认是yes要改成no）"),s("em",[t._v("（当cluster-require-full-coverage为no时，表示当负责一个插槽的master下线且没有相应的从库进行故障恢复时，集群仍然可用）")])])]),t._v(" "),s("tr",[s("td",[t._v("2. meet")]),t._v(" "),s("td",[t._v("6个节点，然后按照第一步的配置执行： "),s("br"),t._v("  redis-server redis-7000.conf（master） "),s("br"),t._v("  redis-server redis-7001.conf（master）"),s("br"),t._v("  redis-server redis-7002.conf（master）"),s("br"),t._v("  redis-server redis-7003.conf（slave）"),s("br"),t._v("  redis-server redis-7004.conf（slave）"),s("br"),t._v("  redis-server redis-7005.conf（slave）"),s("br"),s("br"),t._v("  执行meet："),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7000 cluster meet 127.0.0.1 7001"),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7000 cluster meet 127.0.0.1 7002"),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7000 cluster meet 127.0.0.1 7003"),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7000 cluster meet 127.0.0.1 7004"),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7000 cluster meet 127.0.0.1 7005"),s("br"),t._v("  执行完之后，6个节点之间就可以相互感知了")])]),t._v(" "),s("tr",[s("td",[t._v("3. 分配槽")]),t._v(" "),s("td",[t._v("redis-cli -h 127.0.0.1 -p 7000 cluster addslots {0...5461}"),s("br"),t._v(" redis-cli -h 127.0.0.1 -p 7001 cluster addslots {5462...10922}"),s("br"),t._v(" redis-cli -h 127.0.0.1 -p 7002 cluster addslots {10923...16383}")])]),t._v(" "),s("tr",[s("td",[t._v("4. 主从配置")]),t._v(" "),s("td",[t._v("redis-cli -h 127.0.0.1 -p 7003 cluster replicate ${node-id-7000} "),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7004 cluster replicate ${node-id-7001} "),s("br"),t._v("  redis-cli -h 127.0.0.1 -p 7005 cluster replicate ${node-id-7002}")])])])]),t._v(" "),s("h4",{attrs:{id:"_6-3-2-ruby安装-推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-ruby安装-推荐"}},[t._v("#")]),t._v(" 6.3.2 Ruby安装（推荐）")]),t._v(" "),s("ul",[s("li",[t._v("下载、编译、安装Ruby")]),t._v(" "),s("li",[t._v("安装ruby客户端")]),t._v(" "),s("li",[t._v("安装redis-trib.rb（redis的ruby安装工具）")])]),t._v(" "),s("p",[t._v("原生命令安装：")]),t._v(" "),s("ul",[s("li",[t._v("理解Redis Cluster架构")]),t._v(" "),s("li",[t._v("生产环境不使用")])]),t._v(" "),s("p",[t._v("官方工具安装：高效、准确")]),t._v(" "),s("h3",{attrs:{id:"_6-4-集群伸缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-集群伸缩"}},[t._v("#")]),t._v(" 6.4 集群伸缩")]),t._v(" "),s("h4",{attrs:{id:"_6-4-1-扩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-扩容"}},[t._v("#")]),t._v(" 6.4.1 扩容")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/375413/1677055057078-e3d34c4e-82c7-4f12-960b-d9eab6fba68d.png?x-oss-process=image%2Fresize%2Cw_1214%2Climit_0",alt:""}})]),t._v(" "),s("p",[t._v("槽迁移计划：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611220089585-016ba690-833b-4439-83b4-069bea31507a.png#height=534&id=EARLn&name=54.png&originHeight=534&originWidth=613&originalType=binary&ratio=1&size=68318&status=done&style=none&width=613",alt:"54.png"}})]),t._v(" "),s("p",[t._v("迁移数据：")]),t._v(" "),s("ol",[s("li",[t._v("对target节点发送：cluster setslot {slot} import {sourceNodeId}命令，"),s("s",[t._v("让目标节点准备导入槽的数据")]),s("em",[t._v("（把源节点中的槽slot导入到目标节点，先让目标节点把槽创建出来）")])]),t._v(" "),s("li",[t._v("对源节点发送：cluster setslot {slot} migrating {targetNodeId}命令，"),s("s",[t._v("让源节点准备准备迁出槽的数据（")]),s("em",[t._v("迁移槽数据）")]),t._v(" "),s("ol",[s("li",[t._v("源节点循环执行cluster getkeysinslot {slot} {count}命令，每次获取count个属于槽的键")]),t._v(" "),s("li",[t._v("在源节点上执行migrate {targetIp} {targetPort} key 0 {timeout}命令，把指定key迁移目标节点")]),t._v(" "),s("li",[s("em",[t._v("删除原节点上的槽")])])])]),t._v(" "),s("li",[t._v("重复步骤2直到槽下所有的键数据迁移到目标节点")]),t._v(" "),s("li",[t._v("向集群内所有主节点发送cluster setslot {slot} node {targetNodeId}命令，通知槽分配给目标节点")])]),t._v(" "),s("p",[t._v("在3.0.6版本，支持批量迁移key，pipeline migrate，但是有bug：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611220658323-741de082-82c8-470b-95d8-28d1e48dc39d.png#height=211&id=WR7GB&name=55.png&originHeight=211&originWidth=492&originalType=binary&ratio=1&size=13657&status=done&style=none&width=492",alt:"55.png"}})]),t._v(" "),s("p",[t._v("如果迁移的key中既有过期的也有没过期的，迁移到新节点都会当成过期的；3.2.8修复")]),t._v(" "),s("h4",{attrs:{id:"_6-4-2-缩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-缩容"}},[t._v("#")]),t._v(" 6.4.2 缩容")]),t._v(" "),s("ul",[s("li",[t._v("下线迁移槽")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611221040346-300b14c2-e0e6-4b34-b66a-d112387ffea8.png#height=297&id=JryXo&name=56.png&originHeight=297&originWidth=384&originalType=binary&ratio=1&size=30176&status=done&style=none&width=384",alt:"56.png"}})]),t._v(" "),s("ul",[s("li",[t._v("其他节点忘记该节点：cluster forget {downNodeId}")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611221293076-08a7b8eb-6585-4390-a06d-4b1d910b8ff0.png#height=301&id=PyS4D&name=57.png&originHeight=301&originWidth=518&originalType=binary&ratio=1&size=37560&status=done&style=none&width=518",alt:"57.png"}})]),t._v(" "),s("p",[t._v("集群中的每一个节点都应该去忘记，不然60s后大家又会检测到它，认为它又活了")]),t._v(" "),s("ul",[s("li",[t._v("下线该节点")])]),t._v(" "),s("h3",{attrs:{id:"_6-5-客户端路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-客户端路由"}},[t._v("#")]),t._v(" 6.5 客户端路由")]),t._v(" "),s("h4",{attrs:{id:"_6-5-1-moved重定向-moved异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-1-moved重定向-moved异常"}},[t._v("#")]),t._v(" 6.5.1 moved重定向（moved异常）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611222037067-ee188e48-79d1-40d1-b47b-cb025c221490.png#height=363&id=k9KA9&name=58.png&originHeight=363&originWidth=533&originalType=binary&ratio=1&size=37687&status=done&style=none&width=533",alt:"58.png"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("# "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c，会自动重定向\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" set hello world\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" set php best\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Redirected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("slot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9244")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("located at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get php\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"best"')]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("# 不使用"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" set php best\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOVED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9244")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n")])])]),s("p",[s("em",[t._v("加入-c参数，支持自动的请求重定向，redis-cli接收到moved之后，会自动重定向到对应的节点执行命令")])]),t._v(" "),s("h4",{attrs:{id:"_6-5-2-ask重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-2-ask重定向"}},[t._v("#")]),t._v(" 6.5.2 ask重定向")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611222773016-51251408-946b-4dbe-84a1-0a65f1b8b988.png#height=288&id=mRHyp&name=59.png&originHeight=288&originWidth=447&originalType=binary&ratio=1&size=28478&status=done&style=none&width=447",alt:"59.png"}})]),t._v(" "),s("p",[t._v("背景：原来的槽在node1上，但是正在进行扩容，已经迁移到node2上了")]),t._v(" "),s("h4",{attrs:{id:"_6-5-3-smart客户端-例如jediscluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-3-smart客户端-例如jediscluster"}},[t._v("#")]),t._v(" 6.5.3 smart客户端（例如JedisCluster）")]),t._v(" "),s("ol",[s("li",[t._v("从集群中选一个可运行的节点，使用cluster slots获取节点和槽的映射关系")]),t._v(" "),s("li",[t._v("将cluster slots的结果映射到本地，为每个节点创建JedisPool")]),t._v(" "),s("li",[t._v("当客户端要执行命令的时候，直接在本地crc(key)%16383，然后从本地的表中找到具体的节点")]),t._v(" "),s("li",[t._v("向具体节点发出命令")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/375413/1611234113057-ef08f456-2fe5-4456-9cba-08ec629d41ee.png#height=532&id=CXimG&name=60.png&originHeight=532&originWidth=787&originalType=binary&ratio=1&size=70158&status=done&style=none&width=787",alt:"60.png"}})]),t._v(" "),s("p",[s("em",[t._v("（上图中少画中ask重定向）")])]),t._v(" "),s("h3",{attrs:{id:"_6-6-批量操作mget-mset的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-批量操作mget-mset的实现"}},[t._v("#")]),t._v(" 6.6 批量操作mget/mset的实现")]),t._v(" "),s("h4",{attrs:{id:"_6-6-1-串行mget-mset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-1-串行mget-mset"}},[t._v("#")]),t._v(" 6.6.1 串行mget/mset")]),t._v(" "),s("p",[t._v("本地方法，不用mget/mset，用循环实现")]),t._v(" "),s("h4",{attrs:{id:"_6-6-2-串行io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-2-串行io"}},[t._v("#")]),t._v(" 6.6.2 串行IO")]),t._v(" "),s("p",[t._v("在客户端对key进行分组，然后执行")]),t._v(" "),s("h4",{attrs:{id:"_6-6-3-并行io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-3-并行io"}},[t._v("#")]),t._v(" 6.6.3 并行IO")]),t._v(" "),s("p",[t._v("对key分组后，使用多线程去获取结果")]),t._v(" "),s("h4",{attrs:{id:"_6-6-4-hash-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-4-hash-tag"}},[t._v("#")]),t._v(" 6.6.4 hash_tag")]),t._v(" "),s("p",[t._v("对key加相同的前缀，那么这些key就很大可能落在同一个节点上")]),t._v(" "),s("p",[s("em",[t._v("（就是让相同业务的key落到同一个节点上；Hash Tag：允许用key的部分字符串来计算hash；当一个key包含 {} 的时候，就不对整个key做hash，而仅对 {} 包括的字符串做hash，{}可以是()、[]，这个是可以配置的）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方案")]),t._v(" "),s("th",[t._v("优点")]),t._v(" "),s("th",[t._v("缺点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("串行化")]),t._v(" "),s("td",[t._v("编程简单")]),t._v(" "),s("td",[t._v("大量keys请求延迟严重")])]),t._v(" "),s("tr",[s("td",[t._v("串行IO")]),t._v(" "),s("td",[t._v("编程简单，少量节点满足需求")]),t._v(" "),s("td",[t._v("大量节点延迟严重")])]),t._v(" "),s("tr",[s("td",[t._v("并行IO")]),t._v(" "),s("td",[t._v("利用并行特性，延迟取决于最慢的节点")]),t._v(" "),s("td",[t._v("编程复杂，超时定位问题难")])]),t._v(" "),s("tr",[s("td",[t._v("hash_tag")]),t._v(" "),s("td",[t._v("性能最高")]),t._v(" "),s("td",[t._v("读写增加tag维护成本，容易出现数据倾斜")])])])]),t._v(" "),s("h3",{attrs:{id:"_6-7-故障转移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-故障转移"}},[t._v("#")]),t._v(" 6.7 故障转移")]),t._v(" "),s("p",[t._v("redis cluster不用sentinel，自己实现了故障转移")]),t._v(" "),s("h4",{attrs:{id:"_6-7-1-故障发现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-1-故障发现"}},[t._v("#")]),t._v(" 6.7.1 故障发现")]),t._v(" "),s("blockquote",[s("p",[t._v("节点之间的ping/pong消息，节点之间不止沟通槽信息，还可以监控节点的主从状态，节点的故障等")])]),t._v(" "),s("p",[t._v("主观下线：某个节点认为另外一个节点不可用，A节点定时去ping B节点，A节点收到回复后会记录回复时间，当A节点再去ping B节点的时候，如果发现上次的回复时间于当前时间的差超过cluster-node-timeout，则标记该节点pfail；")]),t._v(" "),s("p",[t._v("客观下线：当半数以上持有槽的主节点都标记某节点主观下线；")]),t._v(" "),s("p",[t._v("当C节点收到A节点的Pong消息，这个消息中携带者故障节点B，这个时候C节点会判断是否认有大于半数的master认为B节点下线，如果是则通知集群内所有节点B节点客观下线，还会通知故障节点的从节点触发故障转移流程")]),t._v(" "),s("h4",{attrs:{id:"_6-7-2-故障恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-2-故障恢复"}},[t._v("#")]),t._v(" 6.7.2 故障恢复")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("检查从节点资格")]),t._v(" "),s("th",[t._v("每个从节点与故障master的断线时间，如果超过cluster-node-timeout"),s("em",[t._v("cluster-slave-validity-factor（默认15s")]),t._v("默认10s = 150s），则取消成为新master的资格")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("从节点选举")]),t._v(" "),s("td",[t._v("就是从节点发起选举的延迟，偏移量约大，越早发起选举，约有机会成为新的master")])]),t._v(" "),s("tr",[s("td",[t._v("选举投票")]),t._v(" "),s("td",[t._v("（其他master）投票超过半数，成为新master")])]),t._v(" "),s("tr",[s("td",[t._v("替换主节点")]),t._v(" "),s("td",[s("br"),t._v(" 当前从节点取消复制，变成主节点（slaveof no one） "),s("br"),t._v(" 执行clusterDelSlot撤销故障主节点负责的槽，并执行clusterAddSlot把这些槽分配给自己"),s("br"),t._v(" 向集群广播自己的pong消息，表明自己已经替换成为主节点")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);